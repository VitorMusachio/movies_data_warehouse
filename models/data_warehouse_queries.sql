-- data warehouse queries

-- weekly public evolution and revenue per region, state and city - classified by movie genre

SELECT ANO,
       SEM,
       SUM(ARRECAD_PARTIC) AS SOMA_ARRECAD,
       SUM(PUBLICO_PARTIC) AS SOMA_PARTIC,
       REGIAO_NOME AS REGIAO,
       ESTADO_NOME AS ESTADO,
       CIDADE_NOME AS CIDADE,
       GENERO_NOME AS GENERO
FROM DW_FT_EXIBICAO AS E 
JOIN DW_DIM_TEMPO AS T ON E.ANO_SEM=T.ANO_SEM
JOIN DW_DIM_SALA AS S ON E.SALA_CODE=S.SALA_CODE
JOIN DW_DIM_PARTIC AS P ON E.PARTIC_CODE=P.PARTIC_CODE
GROUP BY E.ANO_SEM,CIDADE_NOME,GENERO;

-- monthly exibithion evolution per director

SELECT MES_ANO,
       ARTISTA_NOME AS DIRETOR,
       COUNT(ARTISTA_NOME) AS EXIBICAO
FROM DW_FT_EXIBICAO AS E
JOIN DW_DIM_TEMPO AS T ON E.ANO_SEM=T.ANO_SEM
JOIN DW_DIM_PARTIC AS P ON E.PARTIC_CODE=P.PARTIC_CODE
WHERE PAPEL='Diretor'
GROUP BY MES_ANO,P.ARTISTA_CODE;

-- weekly public evolution per actor

SELECT ANO,
       SEM,
       ARTISTA_NOME AS ATOR,
       SUM(PUBLICO_PARTIC) AS PUBLICO
FROM DW_FT_EXIBICAO AS E
JOIN DW_DIM_TEMPO AS T ON E.ANO_SEM=T.ANO_SEM
JOIN DW_DIM_PARTIC AS P ON E.PARTIC_CODE=P.PARTIC_CODE
WHERE PAPEL='Ator'
GROUP BY E.ANO_SEM,P.ARTISTA_CODE;

-- movie release per holiday

SELECT ANO,
       SEM,
       MES_NOME AS MES,
       TRI,
       SUM(ARRECAD_PARTIC) AS ARRECAD,
       SUM(PUBLICO_PARTIC) AS PUBLICO,
       FER 
FROM DW_FT_EXIBICAO AS E
JOIN DW_DIM_TEMPO AS T ON E.ANO_SEM=T.ANO_SEM
WHERE FER IS NOT NULL
GROUP BY FER;

-- movie release per holiday and genre

SELECT 
       CAST(SUM(ARRECAD_PARTIC) AS integer) AS ARRECAD,
       CAST(SUM(PUBLICO_PARTIC) AS integer) AS PUBLICO,
       FER,
       GENERO_NOME
FROM DW_FT_EXIBICAO AS E
JOIN DW_DIM_TEMPO AS T ON E.ANO_SEM=T.ANO_SEM
JOIN DW_DIM_PARTIC P ON E.PARTIC_CODE=P.PARTIC_CODE
JOIN DW_DIM_FILME F ON F.FILME_CODE=P.FILME_CODE   
WHERE FER IS NOT NULL
GROUP BY E.ANO_SEM, P.GENERO_CODE
ORDER BY PUBLICO DESC, GENERO_NOME ASC;
